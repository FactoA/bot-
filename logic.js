const fs = require("fs");
const path = require("path");
const { exec } = require("child_process");
const open = require("open");
const { logEvent } = require("./memory");
const { generateCode } = require("./codegen");

async function handleCommand(cmd) {
  logEvent(`–ö–æ–º–∞–Ω–¥–∞: ${cmd}`);
  const lower = cmd.toLowerCase().trim();

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ —Ñ–∞–π–ª—É
  if (lower.startsWith("—Å—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª ")) {
    const filename = cmd.slice(13).trim();
    fs.writeFileSync(filename, "", "utf-8");
    logEvent(`–§–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${filename}`);
    return `‚úÖ –§–∞–π–ª "${filename}" —Å—Ç–≤–æ—Ä–µ–Ω–æ.`;
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–¥—É
  if (lower.startsWith("–∫–æ–¥ ")) {
    const prompt = cmd.slice(4).trim();
    return await generateCode(prompt);
  }

  // –ó–∞–ø—É—Å–∫ JS-—Ñ–∞–π–ª—É
  if (lower.startsWith("–∑–∞–ø—É—Å—Ç–∏ ")) {
    const filepath = cmd.slice(8).trim();
    try {
      exec(`node ${filepath}`, (error, stdout, stderr) => {
        if (error) {
          console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${stderr}`);
        } else {
          console.log(`üü¢ –í–∏–≤—ñ–¥:\n${stdout}`);
        }
      });
      logEvent(`–ó–∞–ø—É—â–µ–Ω–æ —Ñ–∞–π–ª: ${filepath}`);
      return `üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∞–π–ª—É "${filepath}" –≤–∏–∫–æ–Ω–∞–Ω–æ.`;
    } catch (err) {
      return `‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: ${err.message}`;
    }
  }

  // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–∞–ø–∏—Ç—É –≤ –±—Ä–∞—É–∑–µ—Ä—ñ
  if (lower.startsWith("–∑–∞–ø–∏—Ç–∞–π —É —è–¥—Ä–∞ ")) {
    const query = encodeURIComponent(cmd.slice(15).trim());
    await open(`https://www.bing.com/search?q=${query}`);
    logEvent(`–ó–∞–ø–∏—Ç –¥–æ —è–¥—Ä–∞: ${query}`);
    return `üîó –ó–∞–ø–∏—Ç "${query}" –≤—ñ–¥–∫—Ä–∏—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ.`;
  }

  // –ù–µ—Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞
  return `–ö–æ–º–∞–Ω–¥—É –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ. –°–ø—Ä–æ–±—É–π:
- \`—Å—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª <–Ω–∞–∑–≤–∞>\`
- \`–∫–æ–¥ <–æ–ø–∏—Å>\`
- \`–∑–∞–ø—É—Å—Ç–∏ <—Ñ–∞–π–ª>\`
- \`–∑–∞–ø–∏—Ç–∞–π —É —è–¥—Ä–∞ <–∑–∞–ø–∏—Ç>\``;
}

module.exports = { handleCommand };
