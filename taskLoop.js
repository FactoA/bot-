// ‚è±Ô∏è –¶–∏–∫–ª –∑–∞–¥–∞—á Spark
const updater = require('./self_improvement');
const fileManager = require('./fileManager');
const persona = require('./persona').load();

function startLoop() {
  console.log(`üîÑ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ü–∏–∫–ª –∑–∞–¥–∞—á –¥–ª—è ${persona.name}...`);

  // ‚åõ –ö–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω Spark –æ–Ω–æ–≤–ª—é—î —Å–µ–±–µ –ø–æ –∫–ª—é—á–æ–≤—ñ–π —Ç–µ–º—ñ
  setInterval(async () => {
    const topic = "–Ω–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º—É AI";
    const log = await updater.learnFromWeb(topic);
    await fileManager.saveFile(`logs/task_${Date.now()}.txt`, log);
  }, 300000); // –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω

  // üìÅ –©–æ–≥–æ–¥–∏–Ω–∏ Spark —Å—Ç–≤–æ—Ä—é—î –º–æ–¥—É–ª—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ —ñ–º–ø—É–ª—å—Å—É
  setInterval(async () => {
    const timestamp = new Date().toISOString().replace(/[:.]/g, "_");
    const content = `// ü§ñ –ê–≤—Ç–æ–º–æ–¥—É–ª—å Spark\nconsole.log("–ú–æ–¥—É–ª—å ${timestamp} –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ.");`;
    await fileManager.saveFile(`auto/modules/auto_${timestamp}.js`, content);
    console.log(`üõ†Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–æ –∞–≤—Ç–æ-–º–æ–¥—É–ª—å: auto_${timestamp}.js`);
  }, 3600000); // –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É
}

module.exports = { startLoop };